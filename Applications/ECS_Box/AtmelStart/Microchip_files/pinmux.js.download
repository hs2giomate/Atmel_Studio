var ACME=ACME||{};if(!ACME.configurators){ACME.configurators={}}if(!ACME.configurators.pinmux){ACME.configurators.pinmux={}}if(!ACME.view){ACME.view={}}if(!ACME.view.device){ACME.view.device={}}if(!ACME.view.device.visualizer){ACME.view.device.visualizer={}}(function(e){var b,l=["constructor","toString","valueOf","toLocaleString"],f={},p={},d=0,m,j,r,h,a,g,n,c,i,q=function(){var u,t;j=Ext.Base;r=Ext.ClassManager;for(u=l.length;u-->0;){t=(1<<u);p[f[t]=l[u]]=t}for(u in p){d|=p[u]}d=~d;Function.prototype.$isFunction=1;i=!!(r&&r.addAlias);h=Ext.Class.getPreprocessor("config").fn;a=Ext.Class.getPreprocessor("cachedConfig")&&Ext.Class.getPreprocessor("cachedConfig").fn;g=Ext.Class.getPreprocessor("platformConfig")&&Ext.Class.getPreprocessor("platformConfig").fn;c=Ext.Class.getPreprocessor("privates")&&Ext.Class.getPreprocessor("privates").fn;n=Ext.ClassManager.postprocessors.deprecated&&Ext.ClassManager.postprocessors.deprecated.fn;b=j.$staticMembers;if(!b){b=[];for(m in j){if(j.hasOwnProperty(m)){b.push(m)}}}e.derive=k;return k.apply(this,arguments)},s=function(C,y,B){var v=B.enumerableMembers,z=C.prototype,x,A,w,u,t;if(!y){return}if(i){C.addMembers(y)}else{for(x in y){u=y[x];if(u&&u.$isFunction&&!u.$isClass&&u!==Ext.emptyFn&&u!==Ext.identityFn){t=z.hasOwnProperty(x)&&z[x];if(t){u.$previous=t}z[x]=A=u;A.$owner=C;A.$name=x}else{z[x]=u}}for(w=1;v;w<<=1){if(v&w){v&=~w;x=f[w];z[x]=A=y[x];A.$owner=C;A.$name=x}}}},o=function(x){var t=function w(){return x.apply(this,arguments)||null},v,u;t.prototype=Ext.Object.chain(x.prototype);for(v=b.length;v-->0;){u=b[v];t[u]=j[u]}return t},k=function(y,B,W,t,A,K,z,T,w,M,F){var u=function E(){return this.constructor.apply(this,arguments)||null},V=u,v={enumerableMembers:t&d,onCreated:F,onBeforeCreated:s,aliases:T},I=W.alternateClassName||[],R=Ext.global,N,Q,S,H,P,Z,Y,x,O,D,U,L,G,X,J=r.alternateToName||r.maps.alternateToName,C=r.nameToAlternates||r.maps.nameToAlternates;for(S=b.length;S-->0;){Y=b[S];u[Y]=j[Y]}if(W.$isFunction){W=W(u)}v.data=W;D=W.statics;delete W.statics;W.$className=y;if("$className" in W){u.$className=W.$className}u.extend(B);O=u.prototype;if(A){u.xtype=W.xtype=A[0];O.xtypes=A}O.xtypesChain=K;O.xtypesMap=z;W.alias=T;V.triggerExtended(u,W,v);if(W.onClassExtended){u.onExtended(W.onClassExtended,u);delete W.onClassExtended}if(W.privates&&c){c.call(Ext.Class,u,W)}if(D){if(i){u.addStatics(D)}else{for(U in D){if(D.hasOwnProperty(U)){X=D[U];if(X&&X.$isFunction&&!X.$isClass&&X!==Ext.emptyFn&&X!==Ext.identityFn){u[U]=G=X;G.$owner=u;G.$name=U}u[U]=X}}}}if(W.inheritableStatics){u.addInheritableStatics(W.inheritableStatics);delete W.inheritableStatics}if(O.onClassExtended){V.onExtended(O.onClassExtended,V);delete O.onClassExtended}if(W.platformConfig&&g){g.call(Ext.Class,u,W);delete W.platformConfig}if(W.config){h.call(Ext.Class,u,W)}if(W.cachedConfig&&a){a.call(Ext.Class,u,W);delete W.cachedConfig}if(W.deprecated&&n){n.call(Ext.ClassManager,y,u,W)}v.onBeforeCreated(u,v.data,v);for(S=0,P=w&&w.length;S<P;++S){u.mixin.apply(u,w[S])}for(S=0,P=T.length;S<P;S++){N=T[S];r.setAlias?r.setAlias(u,N):r.addAlias(u,N)}if(W.singleton){V=new u()}if(!(I instanceof Array)){I=[I]}L=r.getName(V);for(S=0,H=I.length;S<H;S++){Q=I[S];r.classes[Q]=V;if(i){r.addAlternate(u,Q)}else{if(L){J[Q]=L;I=C[L]||(C[L]=[]);I.push(Q)}}}for(S=0,P=M.length;S<P;S+=2){Z=M[S];if(!Z){Z=R}Z[M[S+1]]=V}r.classes[y]=V;if(!i){if(L&&L!==y){J[y]=L;I=C[L]||(C[L]=[]);I.push(y)}}delete O.alternateClassName;if(v.onCreated){v.onCreated.call(V,V)}if(y){r.triggerCreated(y)}return V};e.derive=q}(Ext.cmd={}));(Ext.cmd.derive("ACME.view.device.visualizer.Controller",ACME.ext.app.ViewController,{control:{"#":{afterrender:"onRendered",beforedestroy:"onDestroy",pinsSelected:"onPinsSelected",activate:"onActivateVisualizer",deactivate:"onDeactivateVisualizer"},"#raphael":{resize:"onResize",raphaelReady:"onRaphaelReady"},"#helpTool":{click:"onHelp"},"#zoomInButton":{click:"zoomIn"},"#zoomOutButton":{click:"zoomOut"},"#fitButton":{toggle:"toggleAutoFit"},"#labelSelectionMenu menucheckitem":{checkchange:"onPinLabelSelectionChanged"},"#centerAndFitStrategyMenu menuitem":{click:"onCenterAndFitStrategyChanged"}},refs:[{ref:"raphael"},{ref:"fitButton"},{ref:"labelSelectionMenu"},{ref:"centerAndFitStrategyMenu"}],init:function(){var a=this;ACME.ext.app.ViewController.prototype.init.apply(this,arguments);if(ACME.Project.isDeviceReady()){a.onDeviceReady()}a.addManagedListeners([{target:ACME.Project,deviceReady:"onDeviceReady"}])},onRendered:function(){var a=this,b=a.raphael.getEl();if(b){b.on({mousedown:{fn:a.onMouseDown,scope:a},mouseup:{fn:a.onMouseUp,scope:a},mousewheel:{fn:a.onMouseWheel,scope:a},doubletap:{fn:a.onDoubleTap,scope:a}});a.raphael.addCls("grabbable")}},onDestroy:function(){var a=this,b=a.raphael.getEl();if(b){b.un({mousedown:{fn:a.onMouseDown,scope:a},mouseup:{fn:a.onMouseUp,scope:a},mousewheel:{fn:a.onMouseWheel,scope:a},doubletap:{fn:a.onDoubleTap,scope:a}})}if(a.renderer){a.renderer.destroy();delete a.renderer}delete a.device},onDeviceReady:function(){var b=this,a=ACME.Project.getDevice();b.populateLabelSelectionMenu();b.device=a;if(b.device){b.renderer=ACME.view.device.visualizer.renderer.Utils.getRenderer(b.device,b.raphael)}b.draw()},populateLabelSelectionMenu:function(){var b=this,a=ACME.Project.getBoard();b.labelSelectionMenu.removeAll();b.labelSelectionMenu.add({itemId:"instanceName",text:"Hardware instance",checked:false});b.labelSelectionMenu.add({itemId:"componentName",text:"Software component",checked:false});b.labelSelectionMenu.add({itemId:"signalLabel",text:"SW component signals",checked:false});b.labelSelectionMenu.add({itemId:"userLabel",text:"User label",checked:true});if(a&&!a.isCustom()){b.labelSelectionMenu.add({itemId:"boardHeader",text:"Board header",checked:false});b.labelSelectionMenu.add({itemId:"boardLabel",text:"Board label",checked:true})}},active:false,delayedDraw:false,onRaphaelReady:function(){var a=this;if(a.delayedDraw){a.draw()}},onActivateVisualizer:function(){var a=this;a.active=true;function b(){if(a.active&&!a.isDestroyed){if(a.getView().isVisible()){if(a.delayedDraw){a.draw()}if(a.renderer){a.renderer.activate()}}else{Ext.Function.defer(b,50)}}}Ext.Function.defer(b,50)},onDeactivateVisualizer:function(){this.active=false;if(this.renderer){this.renderer.deactivate()}},isReady:function(){var a=this;return a.active&&a.raphael.raphaelReady&&a.renderer},draw:function(){var a=this;if(!a.isReady()){a.delayedDraw=true;return}a.delayedDraw=false;if(a.renderer){a.renderer.draw()}},onResize:function(c,d,a,b,f){var e=this;if(e.renderer){if(e.fitButton.pressed){e.renderer.centerAndFit()}else{e.renderer.updateBox(d,a,b,f)}}},onMouseWheel:function(b){var a=this;a.fitButton.setPressed(false);if(a.renderer){a.renderer.zoom(b.browserEvent.wheelDelta/120,[b.pageX-a.getView().getX(),b.pageY-a.getView().getY()])}},onMouseDown:function(a){a.stopPropagation();a.preventDefault();this.dragStart(a)},onMouseMove:function(a){this.dragMove(a);this.dragStart(a)},onMouseUp:function(a){this.dragStop(a)},onMouseLeave:function(a){this.dragStop(a)},onDoubleTap:function(a){var b=this;b.fitButton.setPressed(false);if(b.renderer){b.renderer.zoom(5,[a.parentEvent.pageX-b.getView().getX(),a.parentEvent.pageY-b.getView().getY()])}},onPinLabelSelectionChanged:function(a,b){if(this.renderer){this.renderer.updatePinLabelSelection(a,b)}},onCenterAndFitStrategyChanged:function(a){this.fitButton.setText(a.text==="center"?"Auto fit":a.text);if(this.renderer){this.renderer.setCenterAndFitStrategy(a.itemId)}},zoomIn:function(){if(this.renderer){this.fitButton.setPressed(false);this.renderer.zoom(5,"center")}},zoomOut:function(){if(this.renderer){this.fitButton.setPressed(false);this.renderer.zoom(-5,"center")}},toggleAutoFit:function(a,b){if(this.renderer){this.renderer.autoCenterAndFit=b;if(b){this.renderer.centerAndFit()}}},dragStart:function(b){var a=this;a.startX=b.pageX;a.startY=b.pageY;a.raphael.getEl().on({mousemove:{fn:a.onMouseMove,scope:a,single:true},mouseup:{fn:a.onMouseUp,scope:a,single:true},mouseleave:{fn:a.onMouseLeave,scope:a,single:true}})},dragMove:function(d){var c=this,b=d.pageX-c.startX,a=d.pageY-c.startY;if(Math.abs(b)>1||Math.abs(a)>1){c.fitButton.setPressed(false)}if(c.renderer){c.renderer.move(b,a)}},dragStop:function(b){var a=this;a.raphael.getEl().un({mousemove:{fn:a.onMouseMove,scope:a,single:true},mouseup:{fn:a.onMouseUp,scope:a,single:true},mouseleave:{fn:a.onMouseLeave,scope:a,single:true}});a.dragMove(b)},onHelp:function(){window.open(ACME.config.Documentation.deviceVisualizer)},onPinsSelected:function(a){if(this.renderer){this.renderer.updatePinSelection(a)}}},0,0,0,0,["controller.deviceVisualizer"],0,[ACME.view.device.visualizer,"Controller"],0));(Ext.cmd.derive("ACME.view.device.visualizer.View",Ext.container.Container,{alternateClassName:"ACME.view.device.Visualizer",controller:"deviceVisualizer",style:{background:"white"},toolAlign:"left",tools:[{itemId:"helpTool",type:"help",tooltip:"Help",enableToggle:true}],layout:"fit",items:[{xtype:"panel",height:"100%",layout:"fit",tbar:[{itemId:"labelSelectButton",xtype:"button",text:"Show labels...",menu:{itemId:"labelSelectionMenu",xtype:"menu",defaults:{xtype:"menucheckitem"}}},{itemId:"zoomInButton",xtype:"button",iconCls:"x-tool-img x-tool-plus",text:"Zoom in"},{itemId:"zoomOutButton",xtype:"button",iconCls:"x-tool-img x-tool-minus",text:"Zoom out"},{itemId:"fitButton",xtype:"splitbutton",text:"Auto fit",enableToggle:true,pressed:true,menu:{itemId:"centerAndFitStrategyMenu",xtype:"menu",items:[{itemId:"center",text:"Auto fit"},{itemId:"topLeft",text:"Top left"},{itemId:"topRight",text:"Top right"},{itemId:"bottomLeft",text:"Bottom left"},{itemId:"bottomRight",text:"Bottom right"}]}}],items:[{itemId:"raphael",xtype:"component",height:"100%",plugins:[{ptype:"raphael",injectGroup:true}]}]}]},0,["deviceVisualizer"],["component","box","container","deviceVisualizer"],{component:true,box:true,container:true,deviceVisualizer:true},["widget.deviceVisualizer"],0,[ACME.view.device.visualizer,"View",ACME.view.device,"Visualizer"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinDetailsEditorController",ACME.ext.app.ViewController,{control:{"#pinMode":{select:"onPinModeChanged"},"#userLabel":{change:"onUserLabelChanged"}},expose:["setPinMuxConfigurator","setPinRecord"],refs:[{ref:"pinDetailsText"},{ref:"pinDetailsPanel"},{ref:"pinDetailsForm"},{ref:"userLabel"},{ref:"pinMode"}],setPinMuxConfigurator:function(a){this.configurator=a},setPinRecord:function(g){var e=this;e.pinDetailsPanel.removeCls("fadeIn");e.fireEventFromView("pinsSelected",g);if(e.pins!==g){e.pins=g;e.updatePinDetailsText();e.updateUserLabel();var b=e.getView().down("configurationForm");if(b){e.pinDetailsForm.remove(b)}var f=[];var d=[];Ext.Array.each(g,function(i){if(i.padsCollection.length>0){var k=i.padsCollection.getAt(0).get("padModes");f.push(k)}else{f.push([])}var j=i.get("padMode");if(d.indexOf(j)===-1){d.push(j)}});var c=[];if(f.length>0){c=f[0]}Ext.Array.each(f,function(i){c=Ext.Array.intersect(c,i)});if(c.length>0){c.unshift(ACME.project.model.relation.Relation.emptyValue);var h=Ext.Array.map(c,function(i){return{text:i}});e.pinMode.getStore().setData(h);if(d.length===1){e.pinMode.setValueNotFoundText(null);e.pinMode.setValue(d[0])}else{if(d.length>1){e.pinMode.setValueNotFoundText("...multiple selections...");e.pinMode.setValue("multipleselections")}}e.updatePinModeConfigurationForm();e.pinMode.show()}else{e.pinMode.hide()}}var a=e.getView();a.setHeight(g.length>0?e.getView().expandedHeight:0);e.pinDetailsPanel.addCls("fadeIn")},setComponentToPadUserlabel:function(b,a){var c=b&&b.getPad()&&b.getPad().getPadRelation();if(c){if(c.getType()==="component-to-pad"){c.setUserLabel(a)}}},onUserLabelChanged:function(d){var b=this,a=[];function c(f,e){if(f.isValidUserLabel(e)){f.set("userLabel",e);b.setComponentToPadUserlabel(f,e)}else{var g=f.getValidationErrorForLabel(e);if(g!==true){a.push(g)}else{a.push(e+" is not a valid user label.")}}}Ext.Array.each(b.pins,function(f,e){if(d.value){c(f,d.value+(b.pins.length>1?e.toString():""))}else{f.set("userLabel",null)}});if(a.length){d.validateValue=function(){d.markInvalid(a);return false}}else{d.validateValue=Object.getPrototypeOf(d).validateValue}},onPinModeChanged:function(){var b=this;var a=b.pins;var c=b.pinMode.getValue();Ext.Array.each(b.pins,function(d){d.set({padMode:c,configuration:null});var f=d.getPad();if(f){var e=f?f.getPadRelation():null;if(e){e.setPadConfig(null);e.setPadMode(c)}}b.fireEventFromView("pinEdited",d)});b.configurator.setSelection(a);b.updatePinDetailsText();b.updatePinModeConfigurationForm()},updatePinDetailsText:function(){var g=this;if(g.pins.length===0){g.pinDetailsText.update("")}else{if(g.pins.length===1){var a=g.pins[0];var h=a.get("id")+" ("+a.get("label")+")";var d=a.get("padMode");var b=a.get("signalLabel");var e=a.get("softwareComponent");var f=a.get("external");var c=f?"":" is an internal pin, and";var i="<p><strong>Tip</strong>: Use <em>ctrl</em> or <em>shift</em> to select more than one pin.</b></p>";if(e&&e!=="_"){g.pinDetailsText.update("<p><em>Pin "+h+"</em>"+c+" is used as <em>"+b+"</em> with <em>"+e+"</em>.</p>"+i)}else{if(d===""){d="no"}g.pinDetailsText.update("<p><strong>Pin "+h+"</strong>"+c+" is currently set to <em>"+d+"</em> pin mode, and not associated with any software component in "+ACME.config.General.productName+". </p>"+i)}}else{g.pinDetailsText.update(g.pins.length+" pins selected.")}}},updateUserLabel:function(){var a=this;a.userLabel.validateValue=Object.getPrototypeOf(a.userLabel).validateValue;if(a.pins.length===0){a.userLabel.hide()}else{if(a.pins.length===1){a.userLabel.setValue(a.pins[0].get("userLabel"));a.userLabel.show()}}},updatePinModeConfigurationForm:function(){var c=this;var d=c.pinMode.getValue();var a=c.getView().down("configurationForm");if(a){c.pinDetailsForm.remove(a)}var b=null;c.configurationForms=[];Ext.Array.each(c.pins,function(e){if(d&&(d!==""&&d!==ACME.project.model.relation.Relation.emptyValue)){if(!b){b=Ext.create("util.async")}ACME.server.Server.getPadModeConfigurationWizard(ACME.Project.getDevice().id,e.get("label"),d,{success:b.waitFor(function(f){c.configurationForms.push(f)}),failure:b.reject})}});if(b){b.await({timeout:ACME.config.Server.timeout,timeoutMessage:ACME.Strings.TimeoutWhileLoadingEditor}).then(c.processConfigRecords.bind(c))}},processConfigRecords:function(){var e=this;if(!e.isDestroyed){var d={};var c=false;Ext.Array.each(e.pins,function(f){var i=f.getPad(),h=i?i.getPadRelation():null,g=h?h.getPadConfig():null;if(g===null){c=true}else{Ext.Object.each(g,function(j,k){if(d[j]){d[j].push(k)}else{d[j]=[k]}})}});var a=Ext.clone(e.configurationForms[0]);if(a.parameters.length===1&&a.parameters[0].main){a.parameters=a.parameters[0].parameters}Ext.Array.each(a.parameters,function(f){f.currentValue=[f.currentValue]});Ext.Array.each(e.configurationForms,function(f){var g=[];if(f.parameters.length===1&&f.parameters[0].main){f.parameters=f.parameters[0].parameters}if(f.label===a.label){Ext.Array.each(a.parameters,function(j){if(j.label){var h=Ext.Array.findBy(f.parameters,function(k){return k.label&&k.label===j.label});if(h!==null){if(j.type===h.type&&j.id===h.id&&Ext.Array.equals(j.tooltips,h.tooltips)){var i=Ext.clone(j);i.enums=Ext.Array.merge(j.enums,h.enums);i.currentValue.push(h.currentValue);g.push(i)}}}})}a.parameters=g});if(a){var b=e.getView().down("configurationForm");if(b){e.pinDetailsForm.remove(b);b.destroy()}delete a.label;if(a.parameters.length===1&&a.parameters[0].main){a.parameters=a.parameters[0].parameters}Ext.Array.each(a.parameters,function(f){var g=Ext.Array.unique(f.currentValue);if(g.length===1){f.currentValue=g[0]}else{f.currentValue=null}});if(a.parameters.length>=1){e.pinDetailsForm.add({xtype:"configurationForm",componentId:"pinDetailsWiz",width:e.pinDetailsPanel.getWidth()-(e.pinDetailsText.getWidth()+e.pinDetailsForm.getWidth())-20,padding:"0 0 0 20",cls:"pinDetailsWiz",border:false,layout:"fit",records:[a],columns:1,showRestoreTool:false});b=e.getView().down("configurationForm");if(b){Ext.Object.each(d,function(g){var f=Ext.Array.unique(d[g]);if(f.length===1&&c===false){d[g]=f[0]}else{d[g]=""}});b.setValues(d);b.addListener("change",function(){var f=b.getValues();Ext.Array.each(e.pins,function(g){var j=g.getPad(),i=j?j.getPadRelation():null,h=i?i.getPadConfig():{};if(Ext.Object.isEmpty(h)){h=f}else{Ext.Object.each(h,function(k){if(f[k]&&f[k]!==""){h[k]=f[k]}})}if(i){i.setPadConfig(h)}})})}}}}}},0,0,0,0,["controller.pinmuxPinDetailsEditorController"],0,[ACME.configurators.pinmux,"PinDetailsEditorController"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinDetailsEditor",Ext.container.Container,{itemId:"pinDetailsEditor",controller:"pinmuxPinDetailsEditorController",cls:"pinDetailsEditor",scrollable:false,expandedHeight:150,items:[{itemId:"pinDetailsPanel",cls:"pinDetailsPanel",bodyPadding:10,scrollable:true,layout:"hbox",items:[{itemId:"pinDetailsText",width:300,height:"100%",padding:"0 10 0 0",cls:"pinDetailsText",html:"Select a pin in the list above to show its configuration options."},{itemId:"pinDetailsForm",xtype:"form",padding:"0 0 0 10",layout:{type:"hbox",align:"stretch"},items:[{xtype:"container",defaults:{xtype:"combobox",queryMode:"local",editable:false,allowBlank:false,forceSelection:true},items:[{fieldLabel:"User label",itemId:"userLabel",xtype:"textfield",displayField:"text",valueField:"value",allowBlank:true,editable:true,msgTarget:"under",hidden:true},{fieldLabel:"Pin mode",itemId:"pinMode",allowBlank:true,store:{fields:["text"],queryMode:"local"},hidden:true}]}]}]}]},0,["pinmuxPinDetailsEditor"],["component","box","container","pinmuxPinDetailsEditor"],{component:true,box:true,container:true,pinmuxPinDetailsEditor:true},["widget.pinmuxPinDetailsEditor"],0,[ACME.configurators.pinmux,"PinDetailsEditor"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinMuxController",ACME.ext.app.ViewController,{control:{"#":{beforedestroy:"onDestroy",activate:"onActivated",groupclick:"onGroupClick",selectionchange:"onRowsSelected"}},expose:["editPin","setPinDetailsEditor","onPinEdit"],demo:"PinMuxConfigurator",init:function(){var a=this;ACME.ext.app.ViewController.prototype.init.apply(this,arguments);a.setStore();a.addManagedListener(ACME.Project,"deviceReady",a.setStore,a)},onActivated:function(){this.regroup()},onDestroy:function(){var b=this,a=ACME.Project.getDevice();if(a){a.pins().un({pinSelect:{fn:b.editPin,scope:b},pinHighlight:{fn:b.highlightPin,scope:b},pinShade:{fn:b.shadePin,scope:b}})}},setStore:function(){var d=this,b=d.getView(),c=ACME.Project.getDevice();if(c){var a=Ext.create("ACME.ext.data.ChainedStore",{source:c.pins()});a.setSorters([{property:"softwareComponent",direction:"ASC"},{property:"id",direction:"ASC"}]);a.setGroupField("softwareComponent");c.pins().on({pinSelect:{fn:d.editPin,scope:d},pinHighlight:{fn:d.highlightPin,scope:d},pinShade:{fn:d.shadePin,scope:d}});b.setStore(a)}},highlightPin:function(b){var a=this.getView().getView();a.focusNode(b);var c=a.getRow(b);if(c){a.highlightItem(c)}},shadePin:function(){this.getView().getView().highlightItem(null)},editPin:function(b,d){var c=this,a=c.getView(),e=a.getView();d=d||{};if(d.ctrlKey){e.getSelectionModel().select(b,true,true)}else{if(d.shiftKey){if(e.getSelectionModel().getSelection()[0]){e.getSelectionModel().selectRange(e.getSelectionModel().getSelection()[e.getSelectionModel().getSelection().length-1],b,true)}}else{e.getSelectionModel().select(b,false,true)}}if(c.pinDetailsEditor){c.pinDetailsEditor.setPinRecord(e.getSelectionModel().getSelection())}},pinDetailsEditor:null,setPinDetailsEditor:function(a){this.pinDetailsEditor=a},onRowsSelected:function(b,a){if(this.pinDetailsEditor){this.pinDetailsEditor.setPinRecord(a)}},onPinEdit:function(b){var c=this;c.ungroup(true);var a=b.get("padMode");b.pads().each(function(e){var d=e.getPadRelation();if(!a||a===ACME.project.model.relation.Relation.emptyValue){if(d){if(d.getComponent()){d.set("padMode","")}else{e.unAssignPort()}}}else{if(d&&d.getComponent()){d.set("padMode",a)}else{e.assignPort(a)}}});c.group(null,b)},onGroupClick:function(b,c,f,d){if(d.getTarget("a",4)){var a=b.summaryFeature.isExpanded(f)?"collapse":"expand";b.summaryFeature[a](f);Ext.Msg.alert("Not implemented","This editor is not implemented yet.")}},regroup:function(){this.ungroup(true);this.group();this.getView().updateLayout()},ungroup:function(e){var c=this,b=c.getView(),d=b.getView();var a=b.getStore().getGroupField();if(a){b.getStore().setGroupField(null)}if(e){c.groupField=a}d.refresh();return a},group:function(b,d){var c=this,a=c.getView(),e=a.getView();b=b||c.groupField;if(b){a.getStore().setGroupField(b)}e.refresh();if(d){e.focusNode(d);e.setSelection(d)}}},0,0,0,0,["controller.pinmux"],0,[ACME.configurators.pinmux,"PinMuxController"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinMux",Ext.grid.Panel,{controller:"pinmux",cls:"pinmux-table",border:true,header:false,viewConfig:{loadMask:false,stripeRows:true,markDirty:false},columns:{defaults:{sortable:true},items:[{text:"Pin",columns:[{width:50,text:"#",dataIndex:"id"},{width:60,text:"Pad",dataIndex:"label"},{width:50,text:"User label",dataIndex:"userLabel"}]},{text:"Board",columns:[{width:75,text:"Header",dataIndex:"pinHeaders"},{width:75,text:"Label",dataIndex:"headerPins"}]},{flex:1,text:"Mode",dataIndex:"padMode"},{hidden:true,text:"Software component",columns:[{width:75,text:"Component",dataIndex:"softwareComponent"},{width:75,text:"Peripheral",dataIndex:"instance"}]},{flex:1,text:"SW component signals",dataIndex:"signalLabel"}]},selModel:{type:"rowmodel",mode:"MULTI"},bufferedRenderer:false,features:[{ftype:"grouping",enableGroupingMenu:true,groupHeaderTpl:['<tpl if="this.isFunctionality(name)">',"{name}",'<div class="gridComponentTools">','<a class="x-btn x-unselectable x-item x-btn-default-small" hidefocus="on" unselectable="on">','<span role="presentation" unselectable="on" class="x-btn-wrap x-btn-wrap-default-small">','<span role="presentation" unselectable="on" class="x-btn-button x-btn-button-default-small x-btn-no-text x-btn-icon x-btn-icon-left x-btn-button-center">','<span unselectable="on" class="x-btn-inner x-btn-inner-default-small">&nbsp;</span>',"</span>","</span>","</a>","</div>","<tpl else>","No software components","</tpl>",{isFunctionality:function(a){return a!=="_"}}]}]},0,["pinmuxConfigurator"],["component","box","container","panel","tablepanel","gridpanel","grid","pinmuxConfigurator"],{component:true,box:true,container:true,panel:true,tablepanel:true,gridpanel:true,grid:true,pinmuxConfigurator:true},["widget.pinmuxConfigurator"],0,[ACME.configurators.pinmux,"PinMux"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinMuxConfiguratorController",ACME.configurators.ConfiguratorController,{control:{pinmuxPinDetailsEditor:{pinEdited:"onPinEdited",pinsSelected:"onPinsSelected"}},refs:[{ref:"pinMuxConfigurator",selector:"pinmuxConfigurator"},{ref:"deviceVisualizer"},{ref:"pinDetailsEditor",selector:"pinmuxPinDetailsEditor"}],onActivated:function(a,b){var c=this;c.pinMuxConfigurator.fireEvent("activate",a,b);c.deviceVisualizer.fireEvent("activate",a,b);c.pinMuxConfigurator.setPinDetailsEditor(c.pinDetailsEditor);c.pinDetailsEditor.setPinMuxConfigurator(c.pinMuxConfigurator)},onDeactivated:function(a,b){this.pinMuxConfigurator.fireEvent("deactivate",a,b);this.deviceVisualizer.fireEvent("deactivate",a,b)},onPinEdited:function(a){this.pinMuxConfigurator.onPinEdit(a)},onPinsSelected:function(b){var a=this;a.deviceVisualizer.fireEvent("pinsSelected",b)}},0,0,0,0,["controller.pinmuxConfigurator"],0,[ACME.configurators.pinmux,"PinMuxConfiguratorController"],0));(Ext.cmd.derive("ACME.configurators.pinmux.PinMuxConfigurator",ACME.configurators.Configurator,{alternateClassName:"ACME.configurators.PinMux",title:"PinMux configurator",itemId:"pinmuxConfigurator",controller:"pinmuxConfigurator",config:{identifier:"pinmux",name:"PinMux",image:"resources/images/buttonicons/pinmux.png",tooltip:'"Go to PINMUX configurator  (shortcut p)"',shortcutKey:"p"},height:"100%",scrollable:false,dashboardTools:[{type:"help",tooltip:"PinMux help",handler:"onHelp",helpUrl:ACME.config.Documentation.deviceVisualizer}],layout:"border",defaults:{layout:"fit"},items:[{xtype:"pinmuxConfigurator",region:"center"},{xtype:"deviceVisualizer",split:true,region:"east",width:"50%"},{xtype:"pinmuxPinDetailsEditor",split:true,region:"south",height:0}]},0,0,["component","box","container","dashboardCard"],{component:true,box:true,container:true,dashboardCard:true},0,0,[ACME.configurators.pinmux,"PinMuxConfigurator",ACME.configurators,"PinMux"],0));